name: Backend Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Build_on_ubuntu:
    runs-on:
      ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:14-3.2
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ai
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Check postgresql version 
        run: |
          psql -V
      - name : Install GDAL and psycopg2
        run : |
          sudo add-apt-repository ppa:ubuntugis/ppa && sudo apt-get update
          sudo apt-get install gdal-bin
          sudo apt-get install libgdal-dev
          sudo apt-get install python3-psycopg2
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal      
      - name : Check gdal version
        run : |
          ogrinfo --version
      - name : Install gdal python
        run : |
          pip install --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`

      - name: Install redis
        run: |
          sudo apt install lsb-release
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install redis
          redis-cli ping

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend/
          pip install -r requirements.txt
      - name: Creating env
        run: |
          cd backend/
          mv sample_env .env
          export DATABASE_URL=postgis://admin:password@localhost:5432/ai
      - name: Run celery worker
        run: |
          cd backend/
          celery -A aiproject worker --loglevel=debug &
      - name: Run flower dashboard
        run: |
          cd backend/
          celery -A aiproject --broker=redis://localhost:6379/ flower  &
      
      - name: Test Build
        run: |
          cd backend/
          python manage.py makemigrations
          python manage.py makemigrations core
          python manage.py makemigrations login
          python manage.py migrate
          python manage.py migrate core
          python manage.py migrate login

